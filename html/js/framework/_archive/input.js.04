function Input() {;}

Input.type 	= ('ontouchstart' in window) ? 'touch' : 'mouse';

Input.eventStart  = (Input.type === 'touch') ? 'touchstart' : 'mousedown';
Input.eventMove  = (Input.type === 'touch') ? 'touchmove' : 'mousemove';
Input.eventEnd 	 = (Input.type === 'touch') ? 'touchend' : 'mouseup';
Input.eventLeave = (Input.type === 'touch') ? 'touchleave' : 'mouseup';
Input.eventCancel = (Input.type === 'touch') ? 'touchcancel' : 'mouseup';

Input.nullCoords = null;
Input.coords = Input.nullCoords;
Input.maxInputs = 3;
Input.lastTouchInput = [];
Input.lastKeyInput = [];
Input.keys = [];

for (var i=0; i<Input.maxInputs; i++)
{  }

Input.init = function(size, keyboard)
{	
	Input.appLayer = new AppLayer('Input', true, size.w, size.h, null);
	
	var checkKeys = (keyboard == null) ? false : keyboard;
	
	var canvas = Input.appLayer.canvas;	
	canvas.addEventListener(Input.eventStart, Input.handleEvent, false);
	canvas.addEventListener(Input.eventMove, Input.handleEvent, false);
	canvas.addEventListener(Input.eventEnd, Input.handleEvent, false);
	
	if (checkKeys)
	{ window.addEventListener('keydown', Input.handleEvent, false); }
}

Input.handleEvent = function(event)
{		
	var touchInput = [];
	var keyInput = [];
	if (event.type === 'keydown')
	{
		//touchInput.push( { type:event.type, key:  Utilities.translateKeyCode(event.keyCode)) } );
		console.log(event);
	}
	else
	{
		event.preventDefault();	
		for (var i=0; i<event.touches.length; i++)
		{
			touchInput.push( { type:event.type, coords: Utilities.translateTouchEvent(event.touches[i]) } );
		}
	}
	
	Input.lastTouchInput = touchInput;
	return false;
}